{
    "openapi": "3.0.0",
    "info": {
        "title": "VocabVault API Documentation",
        "description": "API documentation for VocabVault application with Authentication, Word and Story management",
        "contact": {
            "name": "API Support",
            "email": "your-email@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api",
            "description": "VocabVault API Server"
        }
    ],
    "paths": {
        "/auth/social-login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sosyal medya ile giriş/kayıt",
                "description": "Gmail, Facebook veya Apple ile kullanıcı girişi/kaydı yapar",
                "operationId": "bb498a9bc2104025bad07b3ee863fc86",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "name",
                                    "provider",
                                    "provider_id"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Kullanıcı email adresi",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "name": {
                                        "description": "Kullanıcı adı",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "provider": {
                                        "description": "Sosyal medya sağlayıcısı",
                                        "type": "string",
                                        "enum": [
                                            "google",
                                            "facebook",
                                            "apple"
                                        ],
                                        "example": "google"
                                    },
                                    "provider_id": {
                                        "description": "Sosyal medya platform kullanıcı ID'si",
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "avatar": {
                                        "description": "Profil resmi URL'si (opsiyonel)",
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/avatar.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Giriş başarılı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@gmail.com"
                                                },
                                                "provider": {
                                                    "type": "string",
                                                    "example": "google"
                                                },
                                                "provider_id": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": "https://example.com/avatar.jpg"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "description": "API erişim token'ı",
                                            "type": "string",
                                            "example": "1|abcdefghijklmnopqrstuvwxyz"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validasyon hatası",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Normal kayıt",
                "description": "Email ve şifre ile yeni kullanıcı kaydı yapar",
                "operationId": "c47a1b563e5e8bc3c7b962f893981e84",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Kullanıcı adı",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Email adresi",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "Şifre (minimum 8 karakter)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Şifre onayı",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Kayıt başarılı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "provider": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "provider_id": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "description": "API erişim token'ı",
                                            "type": "string",
                                            "example": "2|abcdefghijklmnopqrstuvwxyz"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validasyon hatası",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email has already been taken."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Normal giriş",
                "description": "Email ve şifre ile kullanıcı girişi yapar",
                "operationId": "1ff9c65c5cd1a8e0786e318eed856972",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email adresi",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "Şifre",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Giriş başarılı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "provider": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "provider_id": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "description": "API erişim token'ı",
                                            "type": "string",
                                            "example": "3|abcdefghijklmnopqrstuvwxyz"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Geçersiz kimlik bilgileri",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validasyon hatası",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Çıkış",
                "description": "Kullanıcı çıkışı yapar ve aktif token'ı iptal eder",
                "operationId": "eae6a8251a6469bbabe454860f64cf37",
                "responses": {
                    "200": {
                        "description": "Çıkış başarılı",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Yetkisiz erişim",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/exercises": {
            "get": {
                "tags": [
                    "Exercises"
                ],
                "summary": "Get random exercise questions",
                "operationId": "dbdb1326c4f8ab63eb64d20d94b518b2",
                "parameters": [
                    {
                        "name": "language",
                        "in": "query",
                        "description": "Language selection (0: Turkish, 1: English)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "question_count",
                        "in": "query",
                        "description": "Number of questions to generate",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": 4
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of exercise questions"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/stories": {
            "get": {
                "tags": [
                    "Stories"
                ],
                "summary": "List all stories",
                "operationId": "6967b324ba45fc1565abb6a3e73b5b75",
                "responses": {
                    "200": {
                        "description": "List of all stories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            " title": {
                                                "type": "string"
                                            },
                                            "content": {
                                                "type": "string"
                                            },
                                            "current_page": {
                                                "type": "integer"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stories"
                ],
                "summary": "Create a new story",
                "operationId": "9b119c7c2514b2ad1af74fa7e4da93eb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    " title": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "current_page": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Story created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        " title": {
                                            "type": "string"
                                        },
                                        "content": {
                                            "type": "string"
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/stories/{id}": {
            "get": {
                "tags": [
                    "Stories"
                ],
                "summary": "Get a specific story",
                "operationId": "a8c1e0e204a15333a1b619df6adc0774",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Story ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Story details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        " title": {
                                            "type": "string"
                                        },
                                        "content": {
                                            "type": "string"
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Story not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Stories"
                ],
                "summary": "Update a specific story",
                "operationId": "344ff8794f053789492786e1924c0560",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Story ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    " title": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "current_page": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Story updated successfully"
                    },
                    "404": {
                        "description": "Story not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Stories"
                ],
                "summary": "Delete a specific story",
                "operationId": "816e5d375454af76f09f201181300cb9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Story ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Story deleted successfully"
                    },
                    "404": {
                        "description": "Story not found"
                    }
                }
            }
        },
        "/words": {
            "get": {
                "tags": [
                    "Words"
                ],
                "summary": "List all words",
                "operationId": "88dc961557d9c1eeef086be22ca53dc0",
                "responses": {
                    "200": {
                        "description": "List of all words",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "turkish": {
                                                "type": "string"
                                            },
                                            "english": {
                                                "type": "string"
                                            },
                                            "learning_status": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Words"
                ],
                "summary": "Create a new word",
                "operationId": "6b390ad44c2208a7596d219b522eb426",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "turkish": {
                                        "type": "string"
                                    },
                                    "english": {
                                        "type": "string"
                                    },
                                    "learning_status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Word created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "turkish": {
                                            "type": "string"
                                        },
                                        "english": {
                                            "type": "string"
                                        },
                                        "learning_status": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/words/{id}": {
            "get": {
                "tags": [
                    "Words"
                ],
                "summary": "Get a specific word",
                "operationId": "9e403941cfe70000c94370674004b7c4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Word ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Word details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "turkish": {
                                            "type": "string"
                                        },
                                        "english": {
                                            "type": "string"
                                        },
                                        "learning_status": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Word not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Words"
                ],
                "summary": "Update a specific word",
                "operationId": "177b33b8ef55ec16b4b44d430123a40d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Word ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "turkish": {
                                        "type": "string"
                                    },
                                    "english": {
                                        "type": "string"
                                    },
                                    "learning_status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Word updated successfully"
                    },
                    "404": {
                        "description": "Word not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Words"
                ],
                "summary": "Delete a specific word",
                "operationId": "9bab18bbe8a7bb5a24f619c9b38c73da",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Word ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Word deleted successfully"
                    },
                    "404": {
                        "description": "Word not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "bearerAuth": {
                "type": "http",
                "in": "header",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Kullanıcı kimlik doğrulama işlemleri"
        },
        {
            "name": "Exercises",
            "description": "API Endpoints for Exercise Management"
        },
        {
            "name": "Stories",
            "description": "API Endpoints of Stories"
        },
        {
            "name": "Words",
            "description": "API Endpoints of Words"
        }
    ]
}